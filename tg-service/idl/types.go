/**
 * This file is auto-generated by dirpcgen
 *
 * Copyright (c) 2018 didichuxing.com, Inc. All Rights Reserved
 *
 * Generated-date: 2018-07-13
 */

package idl

import (
	"github.com/didi/tg-flow/tg-core/wfengine"
)

type NoticeRequestInfo struct {
	RequestId  string `thrift:"request_id,1,required" json:"request_id"`
	NoticeType string `thrift:"notice_type,2,required" json:"notice_type"`
	NoticeInfo string `thrift:"notice_info,3,required" json:"notice_info"`
}

type LoginInfo struct {
	UserName string `thrift:"user_name,1,required" json:"user_name"`
	PassWord string `thrift:"pass_word,2,required" json:"pass_word"`
}

type ResponseInfo struct {
	Tag     bool        `thrift:"request_id,1,required" json:"tag"`
	TypeNum int         `thrift:"err_msg,2,required" json:"typenum"`
	ErrMsg  string      `thrift:"err_msg,3,required" json:"err_msg"`
	Content interface{} `thrift:"err_msg,4,required" json:"content"`
}

type ResponseMsg struct {
	Code    int         `thrift:"request_id,1,required" json:"code"`
	Message string      `thrift:"err_msg,2,required" json:"message"`
	Data    interface{} `thrift:"err_msg,3,required" json:"data"`
}

type WorkFlowData struct {
	ExperimentId  string `json:"experimentid"`
	OldWorkFlowId string `json:"oldworkflowid"`
	WorkFlowId    string `json:"workflowid"`
	Modules       string `json:"modules"`
	Proportion    string `json:"proportion"`
	Defult        string `json:"defult"`
	Remark        string `json:"remark"`
	UserCookie    string `json:"usercookie"`
	CreateTime    string `json:"createtime"`
	UpdateTime    string `json:"updatetime"`
	Operator      string `json:"operator"`
	ManualSlotIds string `json:"manual_slot_ids"`
}

type SenceData struct {
	ExperimentId string `json:"experimentid"`
	Name         string `json:"name"`
	AppName      string `json:"appname"`
	BucketType   string `json:"buckettype"`
	UserCookie   string `json:"usercookie"`
}

type WorkFlow struct {
	Id            int64  `json:"id"`
	DimensionId   int64  `json:"dimension_id"`
	ExperimentId  int64  `json:"experimentId"`
	Modules       string `json:"modules"`
	IsDefault     int    `json:"isDefault"`
	Range1        string `json:"range1"`
	Range2        string `json:"range2"`
	Remark        string `json:"remark"`
	CreateTime    string `json:"createtime"`
	UpdateTime    string `json:"updatetime"`
	Operator      string `json:"operator"`
	ManualSlotIds string `json:"manual_slot_ids"`
	GroupName     string `json:"group_name"`
	FlowCharts    string `json:"flow_charts"`
}

type Asd struct {
	Experimentid string
	Usercookie   string
	Passcookie   string
}

type UserInfo struct {
	UserName string
	PassWord string
	RoleId   int
}

type RankConfig struct {
	Id            int64  `json:"id"`
	Ip            string `json:"ip"`
	SceneId       string `json:"sceneId"`
	AlgoName      string `json:"algoname"`
	ModelName     string `json:"modelname"`
	ModelVersion  string `json:"modelversion"`
	Status        string `json:"status"`
	HistoryConfig string `json:"historyconfig"`
	Operator      string `json:"operator"`
	CreateTime    string `json:"createtime"`
	UpdateTime    string `json:"updatetime"`
	AutoUpdate    string `json:"autoupdate"`
	MachineRoom   string `json:"machineRoom"`
}

type RankerService struct {
	Id                int64  `json:"id"`
	AppId             string `json:"app_id"`
	SceneId           string `json:"scene_id"`
	ServiceUsn        string `json:"service_usn"`
	AlgoName          string `json:"algo_name"`
	ModelName         string `json:"model_name"`
	ModelVersion      string `json:"model_version"`
	HistoryConfig     string `json:"history_config"`
	Operator          string `json:"operator"`
	CreateTime        string `json:"create_time"`
	UpdateTime        string `json:"update_time"`
	AutoUpdateVersion string `json:"auto_update_version"`
	UsnType           string `json:"usn_type"`
	HdfsPath          string `json:"hdfs_path"`
}

type ServerConfig struct {
	Id           int64  `json:"id"`
	MachineRoom  string `json:"machine_room"`
	Ip           string `json:"ip"`
	Role         string `json:"role"`
	IndexVersion string `json:"indexversion"`
	UpdateTime   string `json:"updatetime"`
	Status       string `json:"status"`
}

type SceneConfig struct {
	OldId         int64  `json:"oldid"`
	Id            int64  `json:"id"`
	Name          string `json:"name"`
	NameZh        string `json:"namezh"`
	AppId         int    `json:"appid"`
	AppName       string `json:"appname"`
	BucketType    int64  `json:"buckettype"`
	Operator      string `json:"operator"`
	CreateTime    string `json:"createtime"`
	UpdateTime    string `json:"updatetime"`
	BifrostConfig string `json:"bifrost_config"`
	FlowType      int64  `json:"flow_type"`
	ExpName       string `json:"expname"`
}

type SceneFeature struct {
	Id          int64  `json:"id"`
	SceneName   string `json:"scene_name"`
	FeatureList string `json:"feature_list"`
	Operator    string `json:"operator"`
	CreateTime  string `json:"createtime"`
	UpdateTime  string `json:"updatetime"`
}

type WorkFlowConfig struct {
	SceneName     string `json:"scenename"`
	OldWorkFlowId string `json:"oldworkflowid"`
	WorkFlowId    string `json:"workflowid"`
	DimensionId   int64  `json:"dimension_id"`
	Modules       string `json:"modules"`
	ShowModules   string `json:"showmodules"`
	Proportion    string `json:"proportion"`
	Defult        string `json:"defult"`
	Range1        string `json:"range1"`
	Range2        string `json:"range2"`
	Remark        string `json:"remark"`
	CreateTime    string `json:"createtime"`
	UpdateTime    string `json:"updatetime"`
	Operator      string `json:"operator"`
	ManualSlotIds string `json:"manual_slot_ids"`
	GroupName     string `json:"groupname"`
	SceneId       int64  `json:"scene_id"`
	Configured    bool   `json:"configured"`
	FlowChartJson string `json:"flow_charts_json"`
}

type RecSceneConfig struct {
	OldId      int64  `json:"oldid"`
	Id         int64  `json:"id"`
	SceneId    int64  `json:"scene_id"`
	SceneName  string `json:"scene_name"`
	RecallRule string `json:"recall_rule"`
	Operator   string `json:"operator"`
	CreateTime string `json:"createtime"`
	UpdateTime string `json:"updatetime"`
}

type MachineConfigInfo struct {
	Id          int    `json:"id"`
	AppId       int    `json:"app_id"`
	AppName     string `json:"app_name"`
	MachineRoom string `json:"machine_room"`
	DockerIp    string `json:"docker_ip"`
	DockerName  string `json:"docker_name"`
	Operator    string `json:"operator"`
	UpdateTime  string `json:"update_time"`
}

type SystemConfigInfo struct {
	Id         int    `json:"id"`
	AppId      int    `json:"app_id"`
	KeyName    string `json:"key_name"`
	Content    string `json:"content"`
	Operator   string `json:"operator"`
	CreateTime string `json:"create_time"`
	UpdateTime string `json:"update_time"`
	Remark     string `json:"remark"`
}

type BifrostConfigInfo struct {
	Id           int    `json:"id"`
	SceneId      int    `json:"scene_id"`
	BifrostValue string `json:"bifrost_value"`
	Operator     string `json:"operator"`
	CreateTime   string `json:"create_time"`
	UpdateTime   string `json:"update_time"`
}

type AppConfigInfo struct {
	OldId       int    `json:"old_id"`
	Id          int    `json:"id"`
	AppName     string `json:"app_name"`
	MachineRoom string `json:"machine_room"`
	NodeName    string `json:"node_name"`
	Operator    string `json:"operator"`
	CreateTime  string `json:"create_time"`
	UpdateTime  string `json:"update_time"`
	Description string `json:"description"`
	GitUrl      string `json:"git_url"`
}

type ResourceToSceneInfo struct {
	ResourceId   string `json:"resource_id"`
	ResourceName string `json:"resource_name"`
	SceneId      string `json:"scene_id"`
	SceneName    string `json:"scene_name"`
	ResourceInfo string `json:"resource_info"`
	Operator     string `json:"operator"`
}

type DimensionConfig struct {
	OldId      int64  `json:"old_id"`
	Id         int64  `json:"id"`
	Name       string `json:"name"`
	SceneName  string `json:"scene_name"`
	Content    string `json:"content"`
	Operator   string `json:"operator"`
	CreateTime string `json:"createtime"`
	UpdateTime string `json:"updatetime"`
}

type OldWorkFlowVersionConfig struct {
	SceneName         string `json:"scenename"`
	DimensionId       int64  `json:"dimension_id"`
	VersionId         int64  `json:"version_id"`
	VersionCreateTime string `json:"version_create_time"`
	Operator          string `json:"operator"`
}

type ModelConfig struct {
	UserName            string `json:"username"`
	Id                  int64  `json:"id"`
	SceneId             int64  `json:"scene_id"`
	AlgoName            string `json:"algo_name"`
	ModelName           string `json:"model_name"`
	BifrostKeyName      string `json:"bifrost_key_name"`
	BifrostJobId        int64  `json:"bifrost_job_id"`
	BifrostJobName      string `json:"bifrost_job_name"`
	Path                string `json:"path"`
	Period              int64  `json:"period"`
	LastTransferTime    string `json:"last_transfer_time"`
	LastTransferVersion int64  `json:"last_transfer_version"`
	LastTransferResult  string `json:"last_transfer_result"`
	Operator            string `json:"operator"`
	CreateTime          string `json:"create_time"`
	UpdateTime          string `json:"update_time"`
	Status              int64  `json:"status"`
	Limit               int64  `json:"limit"`
}
type DdlConfig struct {
	Id          string `json:"id"`
	RegionName  string `json:"region_name"`
	ProjectUUID string `json:"projectUUID"`
	Token       string `json:"token"`
	UserUUID    string `json:"userUUID"`
	Operator    string `json:"operator"`
	CreateTime  string `json:"create_time"`
	UpdateTime  string `json:"update_time"`
}
type CityOpenConfig struct {
	Id              int64  `json:"id"`
	CityId          int64  `json:"city_id"`
	SceneId         int64  `json:"scene_id"`
	IsOpen          int64  `json:"is_open"`
	BegDate         string `json:"beg_date"`
	EndDate         string `json:"end_date"`
	RotationPattern string `json:"rotation_pattern"`
	Budget          int64  `json:"budget"`
	Operator        string `json:"operator"`
	CreateTime      string `json:"create_time"`
	UpdateTime      string `json:"update_time"`
}
type GitLabFileConfig struct {
	FileName      string `json:"file_name"`
	FilePath      string `json:"file_path"`
	Size          string `json:"size"`
	Encoding      string `json:"encoding"`
	ContentSha256 string `json:"beg_date"`
	Ref           string `json:"ref"`
	BlobId        string `json:"blob_id"`
	CommitId      string `json:"commit_id"`
	LastCommitId  string `json:"last_commit_id"`
	Content       string `json:"content"`
}

type SceneName struct {
	SceneName string
}
type NodeTypeMenu struct {
	NodeType string
}
type NodeType struct {
	NodeType string   `json:"node_type"`
	NodeName []string `json:"node_name"`
}

//前端传入时 NodeName是 NodeType.NodeName  返回结果时是NodeName
type NodeNameMenu struct {
	NodeName string
}

type NodeParamMenu struct {
	ParamName string
	ParamType string
}

type ChartG6 struct {
	Nodes []*Node `json:"nodes"`
	Edges []*Edge `json:"edges"`
}

type Node struct {
	Id             string            `json:"id"`
	Label          string            `json:"label"`
	NodeType       string            `json:"type"`
	Params         []*wfengine.Param `json:"params"`
	Timeout        int               `json:"timeout"`
	RefWorkflowId  int               `json:"ref_workflow_id"`
	TimeoutAsync   bool              `json:"timeout_async"`
	TimeoutDynamic bool              `json:"timeout_dynamic"`
	Location       string            `json:"location"`
}

type Edge struct {
	Id       string `json:"id"`
	EdgeType string `json:"type"`
	Source   string `json:"source"`
	Target   string `json:"target"`
	Label    string `json:"label,omitempty"`
}

type RankerHost struct {
	MachineRoom   string `json:"machine_room"`
	ServiceUsn    string `json:"service_usn"`
	Ip            string `json:"ip"`
	AppId         int64  `json:"app_id"`
	SceneId       int64  `json:"scene_id"`
	AlgoName      string `json:"algo_name"`
	ModelName     string `json:"model_name"`
	ModelVersion  string `json:"model_version"`
	ExpectVersion string `json:"expect_version"`
	Status        int64  `json:"status"`
	UpdateTime    string `json:"update_time"`
	Operator      string `json:"operator"`
	ShowStatus    string `json:"show_status"`
}

type DebugInfo struct {
	UserId          string                       `json:"user_id"`
	AppName         string                       `json:"app_name"`
	AppId           int64                        `json:"app_id"`
	SceneId         int64                        `json:"scene_id"`
	FlowId          int64                        `json:"flow_id"`
	TimeStamp       int64                        `json:"time_stamp"`
	ActionResultMap map[string]map[string]string `json:"action_result_map"`
	Operator        string                       `json:"operator"`
}

type DebugUserInfo struct {
	AppName       string `json:"app_name"`
	UserIdList    string `json:"user_id"`
	LimitNum      int64  `json:"limit_num"`
	Operator      string `json:"operator"`
	ModifyAppName string `json:"modify_app_name"`
}

//Apollo Open API 相关

type ApolloLaunchInfo struct {
	Code    int64                `json:"code"`
	Message string               `json:"message"`
	Data    ApolloLaunchDataInfo `json:"data"`
}

type ApolloLaunchDataInfo struct {
	ToggleInfo ApolloLaunchToggleInfo   `json:"toggleInfo"`
	Rules      [][]ApolloLaunchRuleInfo `json:"rules"`
	Groups     []ApolloLaunchGroupInfo  `json:"groups"`
}

type ApolloLaunchToggleInfo struct {
	Name               string `json:"name"`
	Description        string `json:"description"`
	VersionDescription string `json:"versionDescription"`
}

type ApolloLaunchRuleInfo struct {
	Key      string    `json:"key"`
	Value    [][]int64 `json:"value"`
	Operator string    `json:"operator"`
	//IsWhiteList bool      `json:"isWhiteList"`
}

type ApolloLaunchGroupInfo struct {
	Name      string                  `json:"name"`
	Rule      ApolloLaunchRuleInfo    `json:"rule"`
	WhiteList *ApolloLaunchParamInfo  `json:"whiteList"`
	Params    []ApolloLaunchParamInfo `json:"params"`
	Remark    string                  `json:"remark"`
}

type ApolloLaunchParamInfo struct {
	Key   string      `json:"key"`
	Type  string      `json:"type"`
	Value interface{} `json:"value"`
}

type ApolloResponse struct {
	Code    int64       `json:"code"`
	Message string      `json:"message"`
	Data    interface{} `json:"data"`
}

type ApolloAbResponse struct {
	Code    int64            `json:"code"`
	Message string           `json:"message"`
	Data    ApolloAbDataInfo `json:"data"`
}

type ApolloAbDataInfo struct {
	Name        string           `json:"name"`
	Owner       string           `json:"owner"`
	CountryCode string           `json:"countryCode"`
	Experiment  AbExperimentInfo `json:"experiment"`
}

type AbExperimentInfo struct {
	Partition ApolloPartitionInfo `json:"partition"`
	Groups    []ApolloAbGroupInfo `json:"groups"`
}

type ApolloAbGroupInfo struct {
	Name        string                  `json:"name"`
	Description string                  `json:"description"`
	WhiteList   ApolloWhiteListInfo     `json:"whitelist"`
	Params      []ApolloLaunchParamInfo `json:"params"`
}

type ApolloPartitionInfo struct {
	Type  string  `json:"type"`
	Value []int64 `json:"value"`
}

type ApolloWhiteListInfo struct {
	Type  string   `json:"type"`
	Value []string `json:"value"`
}

type Template struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
}

type ValueMeta struct {
	Key     string `json:"key"`
	Value   string `json:"value"`
	Type    string `json:"type"`
	KeyType string `json:"keyType"`
}

type ApolloConfigResponse struct {
	Code    int                `json:"code"`
	Message string             `json:"message"`
	Data    []ApolloConfigData `json:"data"`
}

type ApolloConfigUpdateResponse struct {
	Code    int              `json:"code"`
	Message string           `json:"message"`
	Data    ApolloConfigData `json:"data"`
}
type TemplateInfo struct {
}
type Value struct {
	KeyType string      `json:"keyType"`
	Key     string      `json:"key"`
	Type    string      `json:"type"`
	Value   interface{} `json:"value"`
}
type Servers struct {
	ID          int    `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
	Type        int    `json:"type"`
	CreateTime  int64  `json:"createTime"`
	EnvID       int    `json:"envId"`
	IP          bool   `json:"ip"`
	Cluster     bool   `json:"cluster"`
	Service     bool   `json:"service"`
}
type Handler struct {
}
type Region struct {
	ID                      int         `json:"id"`
	Name                    string      `json:"name"`
	Description             string      `json:"description"`
	Type                    int         `json:"type"`
	CreateTime              int64       `json:"createTime"`
	ServiceID               int         `json:"serviceId"`
	PublishType             int         `json:"publishType"`
	Servers                 []Servers   `json:"servers"`
	OdinNodes               interface{} `json:"odinNodes"`
	Handler                 Handler     `json:"handler"`
	FullTraffic             bool        `json:"fullTraffic"`
	ApolloServerFullTraffic bool        `json:"apolloServerFullTraffic"`
	PublishName             string      `json:"publishName"`
}
type MultiLangStatus struct {
}
type PublishRegions struct {
	ID                    int             `json:"id"`
	ConfigID              int             `json:"configId"`
	EnvID                 int             `json:"envId"`
	ConfigVersionID       int             `json:"configVersionId"`
	PublishOrder          int             `json:"publishOrder"`
	Status                int             `json:"status"`
	Region                Region          `json:"region"`
	MultiLangStatus       MultiLangStatus `json:"multiLangStatus"`
	CreateTime            interface{}     `json:"createTime"`
	UpdateTime            int64           `json:"updateTime"`
	CheckTimeRemaining    int             `json:"checkTimeRemaining"`
	DoubleCheckers        string          `json:"doubleCheckers"`
	CurrentPublishHistory interface{}     `json:"currentPublishHistory"`
	DoubleCheckerList     []interface{}   `json:"doubleCheckerList"`
	Offline               bool            `json:"offline"`
	Published             bool            `json:"published"`
	Publishing            bool            `json:"publishing"`
	PublishUnfinished     bool            `json:"publishUnfinished"`
}
type Environments struct {
	ID                      int         `json:"id"`
	Name                    string      `json:"name"`
	Description             string      `json:"description"`
	Type                    int         `json:"type"`
	CreateTime              int64       `json:"createTime"`
	ServiceID               int         `json:"serviceId"`
	PublishType             int         `json:"publishType"`
	Servers                 []Servers   `json:"servers"`
	OdinNodes               interface{} `json:"odinNodes"`
	Handler                 Handler     `json:"handler"`
	FullTraffic             bool        `json:"fullTraffic"`
	ApolloServerFullTraffic bool        `json:"apolloServerFullTraffic"`
	PublishName             string      `json:"publishName"`
}
type Services struct {
	ID                           int            `json:"id"`
	Name                         string         `json:"name"`
	Description                  string         `json:"description"`
	CreatedBy                    string         `json:"createdBy"`
	CreateTime                   int64          `json:"createTime"`
	DefaultEnvID                 int            `json:"defaultEnvId"`
	AppID                        int            `json:"appId"`
	Icon                         string         `json:"icon"`
	Owner                        string         `json:"owner"`
	Version                      string         `json:"version"`
	NeedApprove                  int            `json:"needApprove"`
	ConfigType                   int            `json:"configType"`
	Mine                         interface{}    `json:"mine"`
	Permission                   interface{}    `json:"permission"`
	Environments                 []Environments `json:"environments"`
	Machines                     interface{}    `json:"machines"`
	DingdingGroup                string         `json:"dingdingGroup"`
	MinPublishStep               int            `json:"minPublishStep"`
	ConfigNameRule               string         `json:"configNameRule"`
	DisplayName                  string         `json:"displayName"`
	LastSyncTime                 int64          `json:"lastSyncTime"`
	PublishCheckInterval         int            `json:"publishCheckInterval"`
	EnableDelete                 interface{}    `json:"enableDelete"`
	Stat                         int            `json:"stat"`
	V2                           bool           `json:"v2"`
	ConfigPublishNeedDoubleCheck bool           `json:"configPublishNeedDoubleCheck"`
	V1                           bool           `json:"v1"`
}
type Namespace struct {
	ID                      int         `json:"id"`
	Name                    string      `json:"name"`
	DisplayName             string      `json:"displayName"`
	ConfigNameRule          interface{} `json:"configNameRule"`
	Description             interface{} `json:"description"`
	CreateTime              int64       `json:"createTime"`
	ConfigType              int         `json:"configType"`
	Shared                  int         `json:"shared"`
	CreatedBy               string      `json:"createdBy"`
	EnableScenes            int         `json:"enableScenes"`
	SceneFields             interface{} `json:"sceneFields"`
	Stat                    int         `json:"stat"`
	IncConfigID             int         `json:"incConfigId"`
	ChannelVersion          int         `json:"channelVersion"`
	Services                interface{} `json:"services"`
	Permissions             interface{} `json:"permissions"`
	EnableAutoPublish       int         `json:"enableAutoPublish"`
	IncField                string      `json:"incField"`
	ConfigValueFormat       interface{} `json:"configValueFormat"`
	V2Channel               bool        `json:"v2Channel"`
	OperationTemplateConfig bool        `json:"operationTemplateConfig"`
	EnableAutoIncConfID     bool        `json:"enableAutoIncConfId"`
	TemplateConfig          bool        `json:"templateConfig"`
	V1Channel               bool        `json:"v1Channel"`
}
type ApolloConfigData struct {
	ID                   int            `json:"id"`
	Name                 string         `json:"name"`
	CanChangePublishType bool           `json:"canChangePublishType"`
	Template             interface{}    `json:"template"`
	IsMultiLang          int            `json:"isMultiLang"`
	UsedByDict           bool           `json:"usedByDict"`
	Description          string         `json:"description"`
	CurrentVersion       int            `json:"currentVersion"`
	CreatedBy            string         `json:"createdBy"`
	LockedBy             string         `json:"lockedBy"`
	VersionID            int            `json:"versionId"`
	VersionCreateTime    int64          `json:"versionCreateTime"`
	TemplateInfo         TemplateInfo   `json:"templateInfo"`
	Value                []Value        `json:"value"`
	OriginValue          []interface{}  `json:"originValue"`
	KeyDesc              []interface{}  `json:"keyDesc"`
	EnableFrom           interface{}    `json:"enableFrom"`
	Type                 int            `json:"type"`
	Status               int            `json:"status"`
	ErrorTypeParams      []interface{}  `json:"errorTypeParams"`
	ConfigStatus         string         `json:"configStatus"`
	DeleteStatus         int            `json:"deleteStatus"`
	OfflineStatus        int            `json:"offlineStatus"`
	PublishApproval      interface{}    `json:"publishApproval"`
	OperatingTime        int64          `json:"operatingTime"`
	Operator             string         `json:"operator"`
	PublishRegions       PublishRegions `json:"publishRegions"`
	CreateTime           int64          `json:"createTime"`
	ModifyTime           int64          `json:"modifyTime"`
	ModifiedBy           string         `json:"modifiedBy"`
	Services             []Services     `json:"services"`
	IsDefault            int            `json:"isDefault"`
	Namespace            Namespace      `json:"namespace"`
	VersionDescription   string         `json:"versionDescription"`
	IsSyncOverwrite      int            `json:"isSyncOverwrite"`
	DisplayName          interface{}    `json:"displayName"`
	Permission           []interface{}  `json:"permission"`
	MarketingActivity    interface{}    `json:"marketingActivity"`
	EnableApproval       bool           `json:"enableApproval"`
	Approver             string         `json:"approver"`
	Regions              []string       `json:"regions"`
}

type ApolloConfigRequest struct {
	Name               string   `json:"name"`
	Description        string   `json:"description"`
	Type               int      `json:"type"`
	EnableApproval     bool     `json:"enableApproval"`
	Approver           string   `json:"approver"`
	Regions            []string `json:"regions"`
	Value              []Value  `json:"value"`
	VersionDescription string   `json:"versionDescription"`
}

//model-repository 返回结构体

type ModelRepositoryRequest struct {
	ModelEntryList []*ModelEntry `json:"models"`
}

type ModelEntry struct {
	AppId     int64  `json:"appId"`
	ModelName string `json:"modelName"`
	ModelType string `json:"modelType"`
}

type ModelRepositoryResponse struct {
}

type ModelInfo struct {
	Id          int64  `json:"id"`
	Name        string `json:"name"`
	Version     string `json:"version"`
	ProduceType string `json:"produceType"`
	ModelType   string `json:"modelType"`
	AppId       int64  `json:"appId"`
	HdfsPath    string `json:"hdfsPath"`
}

type AppModuleData struct {
	AppName       string `json:"app_name"`
	ProjectBranch string `json:"project_branch"`
	Operator      string `json:"operator"`
}
